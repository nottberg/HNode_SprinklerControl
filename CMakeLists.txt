CMAKE_MINIMUM_REQUIRED( VERSION 2.8 ) 
PROJECT( hnode-irrigation-daemon ) 

SET( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/" )

SET( HNODE_SPRINKLER_CTRL_SRC
     ${CMAKE_SOURCE_DIR}/src/hnode.cpp
     ${CMAKE_SOURCE_DIR}/src/ilink-obj.c
     ${CMAKE_SOURCE_DIR}/src/i2c_mcp23008.c
     ${CMAKE_SOURCE_DIR}/src/mcp23008-obj.c
     ${CMAKE_SOURCE_DIR}/src/sprinkler_controller.c

     ${CMAKE_SOURCE_DIR}/src/REST/RESTDeamon.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTRepresentation.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTRequest.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTResource.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTContent.cpp

     ${CMAKE_SOURCE_DIR}/src/Switch.cpp
     ${CMAKE_SOURCE_DIR}/src/SwitchDevice.cpp
     ${CMAKE_SOURCE_DIR}/src/SwitchManager.cpp
     ${CMAKE_SOURCE_DIR}/src/SwitchResource.cpp
     ${CMAKE_SOURCE_DIR}/src/I2CExpander.cpp
     ${CMAKE_SOURCE_DIR}/src/MCP23008Expander.cpp
     ${CMAKE_SOURCE_DIR}/src/ZoneManager.cpp
     ${CMAKE_SOURCE_DIR}/src/ZoneResource.cpp
     ${CMAKE_SOURCE_DIR}/src/ScheduleManager.cpp
     ${CMAKE_SOURCE_DIR}/src/ScheduleResource.cpp
     ${CMAKE_SOURCE_DIR}/src/ScheduleConfig.cpp
)

SET( HNODE_SPRINKLER_CTRL_CLIENT_SRC
     ${CMAKE_SOURCE_DIR}/src/SprinklerCtrlClient.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTRepresentation.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTContent.cpp
     ${CMAKE_SOURCE_DIR}/src/REST/RESTHttpClient.cpp
)

SET(Boost_USE_STATIC_LIBS OFF)
SET(Boost_USE_MULTITHREADED OFF)
SET(Boost_USE_STATIC_RUNTIME OFF)
SET(Boost_DEBUG ON)

SET(CMAKE_BUILD_TYPE Debug)

FIND_PACKAGE(GLIB REQUIRED)
FIND_PACKAGE(GOBJECT REQUIRED)
FIND_PACKAGE(AVAHI REQUIRED)
FIND_PACKAGE(HNODE REQUIRED)
FIND_PACKAGE(LibXml2 REQUIRED)
FIND_PACKAGE(MICROHTTPD REQUIRED)
FIND_PACKAGE(Boost 1.49.0 COMPONENTS regex date_time program_options) 
FIND_PACKAGE(CURL REQUIRED) 

MESSAGE( STATUS "Boost Inc: " ${Boost_INCLUDE_DIRS} )
MESSAGE( STATUS "Boost Lib: " ${Boost_LIBRARIES} )

INCLUDE_DIRECTORIES( ${GLIB_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${GOBJECT_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${AVAHI_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${HNODE_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${MICROHTTPD_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${LIBXML2_INCLUDE_DIR} )
INCLUDE_DIRECTORIES( ${Boost_INCLUDE_DIRS} )
INCLUDE_DIRECTORIES( ${CURL_INCLUDE_DIRS} )

INCLUDE_DIRECTORIES( ${CMAKE_SOURCE_DIR}/src )

ADD_EXECUTABLE( hnode_irrigation_daemon ${HNODE_SPRINKLER_CTRL_SRC} ) 
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${GLIB_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${GOBJECT_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${AVAHI_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${HNODE_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${LIBXML2_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${MICROHTTPD_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_daemon ${Boost_LIBRARIES} )

ADD_EXECUTABLE( hnode_irrigation_client ${HNODE_SPRINKLER_CTRL_CLIENT_SRC} ) 
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${GLIB_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${GOBJECT_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${AVAHI_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${HNODE_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${LIBXML2_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${Boost_LIBRARIES} )
TARGET_LINK_LIBRARIES( hnode_irrigation_client ${CURL_LIBRARIES} )

SET( CMAKE_INSTALL_PREFIX /usr )

INSTALL( TARGETS hnode_irrigation_daemon hnode_irrigation_client DESTINATION ${CMAKE_INSTALL_PREFIX}/bin )

INSTALL( FILES ${CMAKE_SOURCE_DIR}/src/scripts/initd/hnode-irrigation-daemon DESTINATION /etc/init.d PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ )

#INSTALL( FILES ${CMAKE_BINARY_DIR}/hnode-server-1.0.pc DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig COMPONENT devel )

SET( CPACK_GENERATOR "DEB" )

#SET( CPACK_PACKAGE_FILE_NAME "lib${CPACK_PACKAGE_NAME}_${CPACK_PACKAGE_VERSION}_${CPACK_DEBIAN_PACKAGE_ARCHITECTURE}" )
SET( CPACK_DEBIAN_PACKAGE_MAINTAINER "Curtis Nottberg" ) #required
 
#SET( CPACK_SET_DESTDIR "on" )
SET( CPACK_PACKAGING_INSTALL_PREFIX "/usr" )

SET( VERSION 1.0-0 )
SET( ${VERSION} CPACK_DEBIAN_PACKAGE_VERSION )
SET( CPACK_DEBIAN_PACKAGE_PRIORITY "optional" )
SET( CPACK_DEBIAN_PACKAGE_SECTION "Daemons" )
SET( CPACK_DEBIAN_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR} )
#SET( CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (> = 2.1.3), libgcc1 (> = 1: 4.1.1)" )

SET( CPACK_PACKAGE_DESCRIPTION "A Hnode daemon for the Sprikler Controller" )
SET( CPACK_PACKAGE_DESCRIPTION_SUMMARY "A Hnode daemon which provides the software control functions for the HNode sprinkler control hardware." )
SET( CPACK_PACKAGE_CONTACT "Curtis Nottberg" )
SET( CPACK_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}_${VERSION}_${CPACK_DEBIAN_ARCHITECTURE}" )

#SET( CPACK_DEB_COMPONENT_INSTALL 1 )
#SET( CPACK_COMPONENTS_ALL lib daemon util devel )

INCLUDE(CPack)


